/*
	Practico 2 - Ejercicio 6:

  Protocolo de Reconocimiento Positivo con Retransmision: PAR
    (“Positive Acknowledgement with Retransmission”)
*/

/*  Eventos:
  fnl (from network layer): recibe un dato
  tnl (to network layer): envia un dato
  fpl (from physical layer): recibe <nro. sec. frame, dato> o ack ultimo frame recibido (dependiendo de la direccion)
  tpl (to physical layer): envia <nro. sec. frame, dato> o ack ultimo frame recibido (dependiendo de la direccion)
  start_timer: setea el timer
  timeout: interrucpcion por excedente de tiempo
*/

/*  Variables:
  data_in: informacion recibida de la entidad peer
  data_out: informacion a transmitir hacia la entidad peer
  ack  {0, 1}: nro. de frame reconocido
  seq  {0, 1}: nro. de frame recibido
  nfts {0, 1}: next frame to send
  fe   {0, 1}: frame expected
*/

range BIN = 0..1

TRANSMISOR        = INIT[0],
INIT[nfts:BIN]    = (fnl                 -> SENDING[nfts]),
SENDING[nfts:BIN] = (ida.tpl[nfts]       -> WAITING[nfts]),
WAITING[nfts:BIN] = (timeout             -> SENDING[nfts]
                    |vuelta.fpl[ack:BIN] ->
                      if (ack != nfts) then
                        SENDING[nfts]
                      else
                        INIT[1-nfts]
                    ).

RECEPTOR        = WAITING[0],
WAITING[fe:BIN] = (ida.fpl[seq:BIN] ->
                    if (seq == fe) then
                      (tnl -> SEND_ACK[1-fe])
                    else
                      SEND_ACK[fe]
                  ),
SEND_ACK[fe:BIN] = (vuelta.tpl[1-fe] -> WAITING[fe]).

// fnl -> tpl -> fpl -> tnl (IDA)
// tnl <- fpl <- tpl <- fnl (VUELTA)
CANAL = (tpl[i:BIN] -> (fpl[i] -> CANAL
                       |perder -> CANAL
                       )
        ).

||PAR = (TRANSMISOR || RECEPTOR || {ida,vuelta}:CANAL)
          \{{ida,vuelta}.perder, timeout}.